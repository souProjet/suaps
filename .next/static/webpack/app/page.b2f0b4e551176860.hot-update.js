"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./utils/suaps.ts":
/*!************************!*\
  !*** ./utils/suaps.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conflitEntreDeux: function() { return /* binding */ conflitEntreDeux; },\n/* harmony export */   extractCreneaux: function() { return /* binding */ extractCreneaux; },\n/* harmony export */   filtrerParActivite: function() { return /* binding */ filtrerParActivite; },\n/* harmony export */   formaterHeure: function() { return /* binding */ formaterHeure; },\n/* harmony export */   formaterJour: function() { return /* binding */ formaterJour; },\n/* harmony export */   genererCombinaisons: function() { return /* binding */ genererCombinaisons; },\n/* harmony export */   getActivitesDisponibles: function() { return /* binding */ getActivitesDisponibles; },\n/* harmony export */   heureToMin: function() { return /* binding */ heureToMin; },\n/* harmony export */   pasDeConflit: function() { return /* binding */ pasDeConflit; },\n/* harmony export */   trouverCombinaisons: function() { return /* binding */ trouverCombinaisons; }\n/* harmony export */ });\n/**\n * Transforme les données de l'API en créneaux formatés\n */ function extractCreneaux(data) {\n    const creneaux = [];\n    for (const act of data){\n        if (!act || !act.nom) continue;\n        const nom = act.nom.toLowerCase();\n        const creneauxList = act.creneaux;\n        if (!creneauxList) continue;\n        for (const c of creneauxList){\n            if (!c.horaireDebut || !c.horaireFin || !c.jour) continue;\n            // Extraction des informations de localisation\n            let localisation = undefined;\n            if (c.localisation) {\n                localisation = {\n                    nom: c.localisation.nom,\n                    adresse: c.localisation.adresse,\n                    ville: c.localisation.ville,\n                    codePostal: c.localisation.codePostal\n                };\n            }\n            creneaux.push({\n                activité: nom,\n                jour: c.jour.charAt(0).toUpperCase() + c.jour.slice(1).toLowerCase(),\n                début: c.horaireDebut,\n                fin: c.horaireFin,\n                localisation\n            });\n        }\n    }\n    return creneaux;\n}\n/**\n * Convertit une heure au format HH:MM en minutes depuis minuit\n */ function heureToMin(heure) {\n    const [heures, minutes] = heure.split(\":\").map(Number);\n    return heures * 60 + minutes;\n}\n/**\n * Vérifie s'il y a conflit entre deux créneaux\n */ function conflitEntreDeux(creneau1, creneau2) {\n    if (creneau1.jour !== creneau2.jour) return false;\n    const d1 = heureToMin(creneau1.début);\n    const f1 = heureToMin(creneau1.fin);\n    const d2 = heureToMin(creneau2.début);\n    const f2 = heureToMin(creneau2.fin);\n    // Conflit si les créneaux se chevauchent\n    return !(f1 <= d2 || f2 <= d1);\n}\n/**\n * Vérifie s'il n'y a pas de conflit dans une combinaison de créneaux\n */ function pasDeConflit(creneaux) {\n    for(let i = 0; i < creneaux.length; i++){\n        for(let j = i + 1; j < creneaux.length; j++){\n            if (conflitEntreDeux(creneaux[i], creneaux[j])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * Filtre les créneaux par activité\n */ function filtrerParActivite(creneaux, nomActivite) {\n    return creneaux.filter((c)=>c.activité.toLowerCase().includes(nomActivite.toLowerCase()));\n}\n/**\n * Génère toutes les combinaisons possibles de créneaux\n */ function genererCombinaisons(activitesSelectionnees) {\n    if (activitesSelectionnees.length === 0) return [];\n    const result = [];\n    function backtrack(index, combinaisonActuelle) {\n        if (index === activitesSelectionnees.length) {\n            result.push([\n                ...combinaisonActuelle\n            ]);\n            return;\n        }\n        const activite = activitesSelectionnees[index];\n        for (const creneau of activite.creneaux){\n            combinaisonActuelle.push(creneau);\n            backtrack(index + 1, combinaisonActuelle);\n            combinaisonActuelle.pop();\n        }\n    }\n    backtrack(0, []);\n    return result;\n}\n/**\n * Trouve toutes les combinaisons compatibles\n */ function trouverCombinaisons(activitesSelectionnees) {\n    const toutesCombinaisons = genererCombinaisons(activitesSelectionnees);\n    const compatibles = toutesCombinaisons.filter(pasDeConflit);\n    return {\n        compatibles,\n        totalCombinaisons: toutesCombinaisons.length\n    };\n}\n/**\n * Obtient la liste des activités disponibles avec leurs créneaux\n */ function getActivitesDisponibles(creneaux) {\n    const activitesMap = new Map();\n    // Grouper les créneaux par activité\n    for (const creneau of creneaux){\n        const nom = creneau.activité;\n        if (!activitesMap.has(nom)) {\n            activitesMap.set(nom, []);\n        }\n        activitesMap.get(nom).push(creneau);\n    }\n    // Convertir en array d'options avec noms d'affichage\n    return Array.from(activitesMap.entries()).map((param)=>{\n        let [nom, creneauxActivite] = param;\n        return {\n            nom,\n            displayName: nom.charAt(0).toUpperCase() + nom.slice(1),\n            creneaux: creneauxActivite\n        };\n    }).sort((a, b)=>a.displayName.localeCompare(b.displayName));\n}\n/**\n * Formate une heure pour l'affichage\n */ function formaterHeure(heure) {\n    return heure;\n}\n/**\n * Formate un jour pour l'affichage\n */ function formaterJour(jour) {\n    return jour;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/suaps.ts\n"));

/***/ })

});